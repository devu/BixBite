package org.bixbite.core
{
	import flash.errors.IllegalOperationError;
	import org.bixbite.core.interfaces.IView;
	import org.bixbite.namespaces.BIXBITE;

	/**
	 * <p>The View manages the graphical and/or textual output of the application.</p>
	 * <p>Framework provides basic implementation of nested structure of the Views aka Composite Pattern.
	 * Provides set of methods similar to the native Flash Display List and manages nested tree hierarchy. 
	 * Use StageView built into Compound as your top view class. Use DisplayView or DisplayViewContainer as a ready to work building blocks.</p>
	 * <p>The View itself is just a subclass of Component to provide base abstract class ready to extend and work with.</p>
	 * @langversion	3.0
	 * @version 0.5.0
	 */
	public class View extends Component implements IView
	{
		/**
		 * Constructor - this class cannot be directly instantiated.
		 */
		public function View ();

		/**
		 * Add Slot / register callbacks of specific type of signal and asociate them with Actors.
		 * @param	type
		 * @param	callback
		 */
		public function addSlot (type:String, callback:Function) : void;

		/**
		 * Remove Slot / unregister this specific actor from being able to recieve any signals of specific type
		 * @param	type
		 */
		public function removeSlot (type:String) : void;

		/**
		 *
		 * @param	type
		 */
		public function sendSignal (type:String, params:Array=null) : void;

		/**
		 *
		 * @param	type
		 * @return
		 */
		public function getSlotReference (type:String) : Array;

		/**
		 *
		 * @inheritDoc
		 */
		public function destroy () : void;
	}
}
