package org.bixbite.core
{
	import org.bixbite.namespaces.BIXBITE;

	/**
	 * <p>Signal is a base class for all signals being propagated within a system.
	 * Provides all necessary getters in read-only mode, and setters automatically controlled by framework.
	 * In this same time helping you solve all architectural problems without referencing objects and keep your Components and Compounds completely decoupled, unaware of each other makes a perfect modular system to work with and more importantly easy to maintain.</p>
	 * 
	 *   <p>In case you need to send more valuable informations within an signal you can use build in params array.</p>
	 * @langversion	3.0
	 * @version 0.6.0
	 */
	public class Signal
	{
		private var _callerUID : String;
		private var _params : Object;

		/**
		 * Unique identifier of the caller.
		 * This method will provide unique id of the Actor that sending particular signal.
		 * This will give you opportunity to respond directly to involved classes without cross-referencing them.
		 */
		public function get callerUID () : String;
		/**
		 *
		 * @private
		 *   System controlled setter for caller unique id.
		 */
		function set callerUID (value:String) : void;

		/**
		 *
		 */
		public function get params () : Object;
		/**
		 *
		 */
		public function set params (params:Object) : void;

		public function Signal (uid:String);

		/**
		 * Public method to deconstruct signal
		 */
		function dispose () : void;
	}
}
