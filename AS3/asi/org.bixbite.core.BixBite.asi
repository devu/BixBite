package org.bixbite.core
{
	import flash.display.Stage;
	import flash.utils.Dictionary;
	import org.bixbite.display.IDisplayList;
	import org.bixbite.namespaces.BIXBITE;

	/**
	 *
	 * @langversion	3.0
	 */
	public class BixBite
	{
		public static const VERSION : String = "BixBite v0.9.5";
		private var cores : Dictionary;
		private var root : IDisplayList;
		public var list : Dictionary;

		public function BixBite (root:IDisplayList);

		/**
		 * Factory method to create a Core
		 * @param	id
		 * @return newly created Core class
		 */
		public function spawnCore (id:String) : Core;

		/**
		 * Core deconstructor
		 * @param	id
		 */
		public function destroyCore (id:String) : void;

		/**
		 * Channel for multi-core communication
		 * @param	cid		core identifier
		 * @param	type	transmited type of signal
		 * @param	signal	transmited signal
		 */
		private function incomingSignal (cid:String, type:String, signal:Signal) : void;

		/**
		 * Add display context
		 * @param	id
		 */
		public function addContext (id:String, context:Context) : void;

		/**
		 * Get any registered display container
		 * @param	id
		 * @return
		 */
		public function getContext (id:String) : Context;

		/**
		 * Internal display list management method, to register a context within the system.
		 * @param	view
		 * @param	id
		 * @param	context
		 * @return	IContext
		 */
		function registerCtx (view:View, id:String, context:Class) : Context;

		/**
		 * Internal display list management method, to unregister a context from the system.
		 * @param	id
		 */
		function unregisterCtx (id:String) : void;
	}
}
