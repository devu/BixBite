package org.bixbite.core
{
	import org.bixbite.core.interfaces.IData;
	import org.bixbite.namespaces.BIXBITE;

	/**
	 * <p>The Data component is a stateless data holder. Data can be directly requested by Behaviours and only.
	 * Data components can be nested aka Composite Pattern provides convenient way of sending only needed portions of requested data.</p>
	 * @langversion	3.0
	 */
	public class Data extends Component implements IData
	{
		/**
		 * Constructor - this class cannot be directly instantiated.
		 */
		public function Data ();

		/**
		 * Add Slot / register callbacks of specific type of Signal and asociate with Data component.
		 * @param	type
		 * @param	callback
		 */
		public function addSlot (type:String, callback:Function) : void;

		/**
		 * Remove Slot / unregister specific Data component from being able to recieve any signals of specific type
		 * @param	type
		 */
		public function removeSlot (type:String) : void;

		/**
		 *
		 * @param	uid
		 * @param	type
		 * @param	params
		 */
		public function responseTo (targetUID:String, type:String, data:IData=null) : void;

		/**
		 * Multicast (one-to-many) method to broadcast signals on Atom communication channel.
		 * @param	type
		 * @param	params
		 */
		public function responseToAll (type:String, data:IData=null) : void;

		/**
		 *
		 * @inheritDoc
		 */
		public function destroy () : void;
	}
}
