package examples
{
	import examples.helloflash.HelloFlash;
	import examples.helloworld.HelloWorld;
	import flash.display.Sprite;
	import flash.events.Event;
	import org.bixbite.core.BixBite;
	import org.bixbite.framework.DisplayListManager;
	import org.bixbite.framework.signal.DisplaySignal;
	import org.bixbite.framework.signal.StatsSignal;
	import org.bixbite.framework.StageManager;
	import org.bixbite.framework.Stats;

	/**
	 *
	 * @version compatibility 0.5.4
	 * @since 0.4.3
	 *   total footprint 12.2kb
	 *   
	 *     Purpose of this example is to show you true power of BixBite framework.
	 *   Due to architecture arrangement, Crystal pattern and Signal/Slot system that keeps all classes perfectly decoupled, let you create number of small functional applications (Compounds) and put them together in no time, to create brand new application.
	 *   This is very powerful feature. To addition to high-performance structure you can very quickly build entire application from early developed small applications and run them all at once as modules.
	 *   Then, this class become main application that will be a bridge between functional modules. 
	 *   Going further, you can create another one app when this one will become a module!
	 *   
	 *     NAMS - Nested Application Modular System
	 *   
	 *     We going to use all previously developed examples.
	 */
	public class MyModularApp extends Sprite
	{
		public function MyModularApp ();

		public function init (e:Event) : void;
	}
}
